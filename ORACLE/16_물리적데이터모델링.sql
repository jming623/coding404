
/* Drop Triggers */

DROP TRIGGER TRI_BOARD_BNO;
DROP TRIGGER TRI_LECTURE_LEC_NO;
DROP TRIGGER TRI_REPLY_RNO;



/* Drop Tables */

DROP TABLE ADMIN_LIST CASCADE CONSTRAINTS;
DROP TABLE REPLY CASCADE CONSTRAINTS;
DROP TABLE BOARD CASCADE CONSTRAINTS;
DROP TABLE LEC_ORDER CASCADE CONSTRAINTS;
DROP TABLE LECTURE CASCADE CONSTRAINTS;
DROP TABLE USERS CASCADE CONSTRAINTS;



/* Drop Sequences */

DROP SEQUENCE SEQ_BOARD_BNO;
DROP SEQUENCE SEQ_LECTURE_LEC_NO;
DROP SEQUENCE SEQ_REPLY_RNO;




/* Create Sequences */

CREATE SEQUENCE SEQ_BOARD_BNO INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_LECTURE_LEC_NO INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_REPLY_RNO INCREMENT BY 1 START WITH 1;



/* Create Tables */

CREATE TABLE ADMIN_LIST
(
	ID varchar2(30) NOT NULL,
	REGDATE date DEFAULT SYSDATE,
	PRIMARY KEY (ID)
);


CREATE TABLE BOARD
(
	BNO number(10) NOT NULL,
	WRITER varchar2(30) NOT NULL,
	TITLE varchar2(30),
	CONTENT varchar2(2000),
	PRIMARY KEY (BNO)
);


CREATE TABLE LECTURE
(
	LEC_NO number(10) NOT NULL,
	TEACHER varchar2(30),
	LEC_LIST varchar2(30),
	PRIMARY KEY (LEC_NO)
);


CREATE TABLE LEC_ORDER
(
	ID varchar2(30) NOT NULL,
	LEC_NO number(10) NOT NULL,
	ORDERDATE date DEFAULT SYSDATE,
	PRIMARY KEY (ID, LEC_NO)
);


CREATE TABLE REPLY
(
	RNO number(10) NOT NULL,
	WRITER varchar2(30) NOT NULL,
	CONTENT varchar2(2000),
	BNO number(10) NOT NULL,
	PRIMARY KEY (RNO)
);


CREATE TABLE USERS
(
	ID varchar2(30) NOT NULL,
	NAME varchar2(30) NOT NULL,
	REGDATE date DEFAULT SYSDATE,
	PRIMARY KEY (ID)
);



/* Create Foreign Keys */

ALTER TABLE REPLY
	ADD CONSTRAINT REPLE FOREIGN KEY (BNO)
	REFERENCES BOARD (BNO)
;


ALTER TABLE LEC_ORDER
	ADD FOREIGN KEY (LEC_NO)
	REFERENCES LECTURE (LEC_NO)
;


ALTER TABLE ADMIN_LIST
	ADD FOREIGN KEY (ID)
	REFERENCES USERS (ID)
;


ALTER TABLE BOARD
	ADD CONSTRAINT WRITE FOREIGN KEY (WRITER)
	REFERENCES USERS (ID)
;


ALTER TABLE LEC_ORDER
	ADD FOREIGN KEY (ID)
	REFERENCES USERS (ID)
;


ALTER TABLE REPLY
	ADD FOREIGN KEY (WRITER)
	REFERENCES USERS (ID)
;



/* Create Triggers */

CREATE OR REPLACE TRIGGER TRI_BOARD_BNO BEFORE INSERT ON BOARD
FOR EACH ROW
BEGIN
	SELECT SEQ_BOARD_BNO.nextval
	INTO :new.BNO
	FROM dual;
END;

/

CREATE OR REPLACE TRIGGER TRI_LECTURE_LEC_NO BEFORE INSERT ON LECTURE
FOR EACH ROW
BEGIN
	SELECT SEQ_LECTURE_LEC_NO.nextval
	INTO :new.LEC_NO
	FROM dual;
END;

/

CREATE OR REPLACE TRIGGER TRI_REPLY_RNO BEFORE INSERT ON REPLY
FOR EACH ROW
BEGIN
	SELECT SEQ_REPLY_RNO.nextval
	INTO :new.RNO
	FROM dual;
END;

/




